{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["/* eslint-disable react/no-unused-prop-types */\n/* eslint-disable padded-blocks */\n/* eslint-disable no-multiple-empty-lines */\nimport React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nconst GOOGLE_PAY_BUTTON_SDK_URL = 'https://pay.google.com/gp/p/js/pay.js'\n\nexport default class GPayButton extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    development: PropTypes.bool,\n    color: PropTypes.oneOf(['black', 'white']),\n    type: PropTypes.oneOf(['long', 'short']),\n    // * Google Pay API\n    apiVersion: PropTypes.number,\n    apiVersionMinor: PropTypes.number,\n    currencyCode: PropTypes.string.isRequired,\n    countryCode: PropTypes.string,\n    totalPriceStatus: PropTypes.string.isRequired,\n    totalPrice: (props, propName, componentName) => {\n      if (props.totalPriceStatus !== 'NOT_CURRENTLY_KNOWN') {\n        if (props[propName] === undefined || props[propName] === '') {\n          return new Error(`${componentName}: the prop totalPrice is required unless the prop totalPriceStatus is set to NOT_CURRENTLY_KNOWN`)\n        } else if (!/^[0-9]+(\\.[0-9][0-9])?$/.exec(props[propName])) {\n          return new Error(`${componentName}: the prop totalPrice should be either in a number format or a string of numbers. Should match ^[0-9]+(\\\\.[0-9][0-9])?$`)\n        }\n      }\n    },\n    displayItems: PropTypes.arrayOf(PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      type: PropTypes.oneOf(['LINE_ITEM', 'SUBTOTAL']).isRequired,\n      price: PropTypes.string.isRequired,\n      status: PropTypes.oneOf(['FINAL', 'PENDING'])\n    })),\n    totalPriceLabel: PropTypes.string,\n    checkoutOption: PropTypes.string,\n    merchantInfo: function (props, propName, componentName) {\n      if (props.development === false && (props[propName].merchantId === undefined || props[propName].merchantId === '')) {\n        return new Error(`${componentName}: merchantInfo -> merchantId is required in production environment!`)\n      } else {\n        const merchantInfoProps = props[propName]\n        // merchantName, merchantOrigin\n        for (let prop in merchantInfoProps) {\n          if (typeof merchantInfoProps[prop] !== 'string') {\n            return new Error(`${componentName}: merchantInfo -> ${prop} should be a string!`)\n          }\n        }\n      }\n    },\n    allowedPaymentMethods: PropTypes.arrayOf(\n      PropTypes.shape({\n        type: PropTypes.oneOf(['CARD', 'PAYPAL']),\n        parameters: PropTypes.oneOfType([\n          PropTypes.shape({\n            allowedAuthMethods: PropTypes.arrayOf(PropTypes.oneOf(['PAN_ONLY', 'CRYPTOGRAM_3DS'])),\n            allowedCardNetworks: PropTypes.arrayOf(PropTypes.oneOf(['AMEX', 'DISCOVER', 'INTERAC', 'JCB', 'MASTERCARD', 'VISA']))\n          }),\n          PropTypes.shape({\n            purchase_context: PropTypes.shape({\n              purchase_units: PropTypes.array\n            })\n          })\n        ]),\n        tokenizationSpecification: PropTypes.shape({\n          type: PropTypes.oneOf(['PAYMENT_GATEWAY', 'DIRECT']),\n          parameters: PropTypes.oneOfType([\n            PropTypes.shape({\n              gateway: PropTypes.string,\n              gatewayMerchantId: PropTypes.string\n            }),\n            PropTypes.shape({\n              protocolVersion: PropTypes.string,\n              publicKey: PropTypes.string\n            })\n          ])\n        })\n      })\n    ),\n    onLoadPaymentData: PropTypes.func,\n    onPaymentAuthorized: PropTypes.func,\n    onPaymentDataChanged: PropTypes.func,\n    onUserCanceled: PropTypes.func\n  }\n\n  static defaultProps = {\n    style: {},\n    development: false,\n    color: 'black',\n    type: 'long',\n    apiVersion: 2,\n    apiVersionMinor: 0,\n    allowedPaymentMethods: [\n      {\n        type: 'CARD',\n        parameters: {\n          allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\n          allowedCardNetworks: ['AMEX', 'DISCOVER', 'INTERAC', 'JCB', 'MASTERCARD', 'VISA']\n        },\n        tokenizationSpecification: {\n          type: 'PAYMENT_GATEWAY',\n          parameters: {\n            gateway: 'example',\n            gatewayMerchantId: 'exampleGatewayMerchantId'\n          }\n        }\n      }\n    ],\n    onLoadPaymentData: paymentData => {\n      console.warn('GPayButton: Provide an onLoadPaymentData function to capture this paymentData', paymentData)\n    },\n    onPaymentAuthorized: paymentData => {\n      console.warn('GPayButton: Provide an onPaymentAuthorized function to capture this paymentData', paymentData)\n    },\n    onUserCanceled: paymentDataRequest => {\n      console.warn(`GPayButton: User has cancelled the transaction -> paymentDataRequest `, paymentDataRequest)\n    }\n  }\n\n  state = {\n    paymentsClientInitialised: false,\n    paymentsClient: undefined\n  }\n\n  componentDidMount() {\n    if (!this.state.paymentsClientInitialised) {\n      this.loadSDK()\n    }\n  }\n\n  loadSDK = () => {\n    const script = document.createElement('script')\n    script.src = GOOGLE_PAY_BUTTON_SDK_URL\n    script.onload = this.setPaymentsClient\n    script.async = true\n    script.defer = true\n    document.body.appendChild(script)\n  }\n\n  setPaymentsClient = () => {\n    const {\n      development,\n      onPaymentAuthorized,\n      onPaymentDataChanged\n    } = this.props\n\n    let options = {\n      environment: development ? 'TEST' : 'PRODUCTION'\n    }\n    if (typeof onPaymentAuthorized === 'function') {\n      options = {\n        ...options,\n        paymentDataCallbacks: {\n          onPaymentAuthorized\n        }\n      }\n    }\n    if (typeof onPaymentDataChanged === 'function') {\n      options = {\n        ...options,\n        paymentDataCallbacks: {\n          ...options.paymentDataCallbacks,\n          onPaymentDataChanged\n        }\n      }\n    }\n\n    this.setState({\n      paymentsClientInitialised: true,\n      paymentsClient: new window.google.payments.api.PaymentsClient(options)\n    })\n  }\n\n  payButtonClickListener = () => {\n    const {\n      currencyCode,\n      countryCode,\n      totalPriceStatus,\n      totalPrice,\n      displayItems,\n      totalPriceLabel,\n      checkoutOption,\n      merchantInfo,\n      apiVersion,\n      apiVersionMinor,\n      allowedPaymentMethods,\n      onLoadPaymentData,\n      onPaymentAuthorized,\n      onPaymentDataChanged,\n      onUserCanceled\n    } = this.props\n\n    const paymentDataRequest = {\n      apiVersion,\n      apiVersionMinor,\n      allowedPaymentMethods,\n      transactionInfo: {\n        currencyCode,\n        countryCode,\n        totalPriceStatus,\n        totalPrice,\n        displayItems,\n        totalPriceLabel,\n        checkoutOption\n      },\n      merchantInfo\n    }\n\n    const callbackIntents = []\n    if (typeof onPaymentAuthorized === 'function') {\n      callbackIntents.push('PAYMENT_AUTHORIZATION')\n    }\n    if (typeof onPaymentDataChanged === 'function') {\n      callbackIntents.push('SHIPPING_ADDRESS', 'SHIPPING_OPTION')\n    }\n    if (callbackIntents.length) {\n      paymentDataRequest.callbackIntents = [...callbackIntents]\n    }\n\n    this.state.paymentsClient.loadPaymentData(paymentDataRequest).then(function(paymentData) {\n      onLoadPaymentData(paymentData)\n\n    }).catch(function(error) {\n      console.error('GPayButton.paymentsClient.loadPaymentData -> error', error)\n      if (error.statusCode === 'CANCELED') {\n        onUserCanceled(paymentDataRequest)\n      }\n\n    })\n  }\n\n  componentDidUpdate() {\n    const {\n      isReadyToPay,\n      paymentsClientInitialised,\n      paymentsClient\n    } = this.state\n\n    if (isReadyToPay || !paymentsClientInitialised) {\n      return\n    }\n\n    const {\n      apiVersion,\n      apiVersionMinor,\n      allowedPaymentMethods\n    } = this.props\n\n    const isReadyToPayRequest = {\n      apiVersion,\n      apiVersionMinor,\n      allowedPaymentMethods\n    }\n\n    paymentsClient.isReadyToPay(isReadyToPayRequest)\n      .then(response => {\n        const isReadyToPay = response.result\n        if (isReadyToPay) {\n          // * this function is called only to initialise the button styling, the returned button element is NOT used\n          paymentsClient.createButton({onClick: this.payButtonClickListener})\n          this.setState({ isReadyToPay })\n        }\n\n      })\n      .catch(error => {\n        console.error('window.configureGPay -> error', error)\n\n      })\n  }\n\n  render() {\n    const {\n      className,\n      style,\n      color,\n      type\n    } = this.props\n\n    return (\n      <div className={className} style={style}>\n        { this.state.isReadyToPay &&\n          <button\n            onClick={this.payButtonClickListener}\n            type='button'\n            aria-label='Google Pay'\n            className={`gpay-button ${color} ${type}`}\n          />\n        }\n      </div>\n    )\n  }\n}\n"],"names":["GOOGLE_PAY_BUTTON_SDK_URL","GPayButton","state","undefined","loadSDK","script","document","createElement","src","onload","setPaymentsClient","async","defer","body","appendChild","props","development","onPaymentAuthorized","onPaymentDataChanged","options","paymentDataCallbacks","setState","window","google","payments","api","PaymentsClient","payButtonClickListener","currencyCode","countryCode","totalPriceStatus","totalPrice","displayItems","totalPriceLabel","checkoutOption","merchantInfo","apiVersion","apiVersionMinor","allowedPaymentMethods","onLoadPaymentData","onUserCanceled","paymentDataRequest","callbackIntents","push","length","paymentsClient","loadPaymentData","then","paymentData","catch","error","statusCode","paymentsClientInitialised","isReadyToPay","isReadyToPayRequest","response","result","createButton","onClick","className","style","color","type","React","PureComponent","propTypes","PropTypes","object","string","bool","oneOf","number","isRequired","propName","componentName","Error","exec","arrayOf","shape","merchantId","merchantInfoProps","prop","oneOfType","array","func","defaultProps","warn"],"mappings":"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"}