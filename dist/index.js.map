{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["/* eslint-disable react/no-unused-prop-types */\n/* eslint-disable padded-blocks */\n/* eslint-disable no-multiple-empty-lines */\nimport React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nconst GOOGLE_PAY_BUTTON_SDK_URL = 'https://pay.google.com/gp/p/js/pay.js'\n\nexport default class GPayButton extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    color: PropTypes.oneOf(['black', 'white']),\n    buttonType: PropTypes.oneOf(['long', 'short']),\n    development: PropTypes.bool,\n    // * Google Pay API\n    currencyCode: PropTypes.string.isRequired,\n    countryCode: PropTypes.string,\n    totalPriceStatus: PropTypes.string.isRequired,\n    totalPrice: (props, propName, componentName) => {\n      if (props.totalPriceStatus !== 'NOT_CURRENTLY_KNOWN') {\n        if (props[propName] === undefined || props[propName] === '') {\n          return new Error(`${componentName}: the prop totalPrice is required unless the prop totalPriceStatus is set to NOT_CURRENTLY_KNOWN`)\n        } else if (!/^[0-9]+(\\.[0-9][0-9])?$/.exec(props[propName])) {\n          return new Error(`${componentName}: the prop totalPrice should be either in a number format or a string of numbers. Should match ^[0-9]+(\\\\.[0-9][0-9])?$`)\n        }\n      }\n    },\n    displayItems: PropTypes.arrayOf(PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      type: PropTypes.oneOf(['LINE_ITEM', 'SUBTOTAL']),\n      price: PropTypes.string.isRequired,\n      status: PropTypes.oneOf(['FINAL', 'PENDING'])\n    })),\n    totalPriceLabel: PropTypes.string,\n    checkoutOption: PropTypes.string,\n    merchantInfo: function (props, propName, componentName) {\n      if (props.development === false && (props[propName].merchantId === undefined || props[propName].merchantId === '')) {\n        return new Error(`${componentName}: merchantInfo -> merchantId is required in production environment!`)\n      } else {\n        const merchantInfoProps = props[propName]\n        // merchantName, merchantOrigin\n        for (let prop in merchantInfoProps) {\n          if (typeof merchantInfoProps[prop] !== 'string') {\n            return new Error(`${componentName}: merchantInfo -> ${prop} should be a string!`)\n          }\n        }\n      }\n    },\n    baseRequest: PropTypes.shape({\n      apiVersion: PropTypes.number,\n      apiVersionMinor: PropTypes.number\n    }),\n    tokenizationSpecification: PropTypes.shape({\n      type: PropTypes.oneOf(['PAYMENT_GATEWAY', 'DIRECT']).isRequired,\n      parameters: PropTypes.oneOfType([\n        PropTypes.shape({\n          gateway: PropTypes.string.isRequired,\n          gatewayMerchantId: PropTypes.string.isRequired\n        }),\n        PropTypes.shape({\n          protocolVersion: PropTypes.string.isRequired,\n          publicKey: PropTypes.string.isRequired\n        })\n      ]).isRequired\n    }).isRequired,\n    allowedCardNetworks: PropTypes.arrayOf(PropTypes.oneOf(['AMEX', 'DISCOVER', 'INTERAC', 'JCB', 'MASTERCARD', 'VISA'])),\n    allowedAuthMethods: PropTypes.arrayOf(PropTypes.oneOf(['PAN_ONLY', 'CRYPTOGRAM_3DS'])),\n    // ? Paypal support\n    purchase_context: PropTypes.shape({\n      purchase_units: PropTypes.array\n    }),\n    paymentMethodType: PropTypes.oneOf(['CARD', 'PAYPAL']).isRequired\n  }\n\n  static defaultProps = {\n    development: false,\n    baseRequest: {\n      apiVersion: 2,\n      apiVersionMinor: 0\n    },\n    allowedCardNetworks: ['AMEX', 'DISCOVER', 'INTERAC', 'JCB', 'MASTERCARD', 'VISA'],\n    allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\n    paymentMethodType: 'CARD',\n    color: 'black',\n    buttonType: 'long'\n  }\n\n  state = {\n    paymentsClientInitialised: false,\n    paymentsClient: undefined\n  }\n\n  componentDidMount() {\n    if (!this.state.paymentsClientInitialised) {\n      this.loadSDK()\n    }\n  }\n\n  loadSDK = () => {\n    const script = document.createElement('script')\n    script.src = GOOGLE_PAY_BUTTON_SDK_URL\n    script.onload = this.setPaymentsClient\n    script.async = true\n    script.defer = true\n    document.body.appendChild(script)\n  }\n\n  setPaymentsClient = () => {\n    this.setState({\n      paymentsClientInitialised: true,\n      paymentsClient: new window.google.payments.api.PaymentsClient({environment: this.props.development ? 'TEST' : 'PRODUCTION'})\n    })\n  }\n\n  payButtonClickListener = () => {\n    const {\n      currencyCode,\n      countryCode,\n      totalPriceStatus,\n      totalPrice,\n      displayItems,\n      totalPriceLabel,\n      checkoutOption,\n      merchantInfo,\n      baseRequest,\n      paymentMethodType,\n      allowedAuthMethods,\n      allowedCardNetworks,\n      tokenizationSpecification\n    } = this.props\n\n    const baseCardPaymentMethod = {\n      type: paymentMethodType,\n      parameters: {\n        allowedAuthMethods,\n        allowedCardNetworks\n      },\n      tokenizationSpecification\n    }\n\n    const paymentDataRequest = {\n      ...baseRequest,\n      allowedPaymentMethods: [baseCardPaymentMethod],\n      transactionInfo: {\n        currencyCode,\n        countryCode,\n        totalPriceStatus,\n        totalPrice,\n        displayItems,\n        totalPriceLabel,\n        checkoutOption\n      },\n      merchantInfo\n    }\n\n    this.state.paymentsClient.loadPaymentData(paymentDataRequest).then(function(paymentData) {\n      // if using gateway tokenization, pass this token without modification\n      const paymentToken = paymentData.paymentMethodData.tokenizationData.token\n      console.log('GPayButton.payButtonClickListener -> paymentToken', paymentToken)\n      // TODO pass the paymentToken variable to the parent component using a required prop callback function\n\n    }).catch(function(error) {\n      console.error('GPayButton.payButtonClickListener -> error', error)\n    })\n  }\n\n  componentDidUpdate() {\n    const {\n      isReadyToPay,\n      paymentsClientInitialised,\n      paymentsClient\n    } = this.state\n\n    if (isReadyToPay || !paymentsClientInitialised) {\n      return\n    }\n\n    const {\n      paymentMethodType,\n      allowedAuthMethods,\n      allowedCardNetworks,\n      tokenizationSpecification\n    } = this.props\n    const baseCardPaymentMethod = {\n      type: paymentMethodType,\n      parameters: {\n        allowedAuthMethods,\n        allowedCardNetworks\n      },\n      tokenizationSpecification\n    }\n\n    const isReadyToPayRequest = {\n      ...this.props.baseRequest,\n      allowedPaymentMethods: [baseCardPaymentMethod]\n    }\n\n    paymentsClient.isReadyToPay(isReadyToPayRequest)\n      .then(response => {\n        const isReadyToPay = response.result\n        if (isReadyToPay) {\n          // * this function is called only to initialise the button styling, the returned button element is NOT used\n          paymentsClient.createButton({onClick: this.payButtonClickListener})\n          this.setState({ isReadyToPay })\n        }\n\n      })\n      .catch(error => {\n        console.error('window.configureGPay -> error', error)\n\n      })\n  }\n\n  render() {\n    const {\n      className,\n      style,\n      color,\n      buttonType\n    } = this.props\n\n    return (\n      <div className={className} style={style}>\n        { this.state.isReadyToPay &&\n          <button\n            onClick={this.payButtonClickListener}\n            type='button'\n            aria-label='Google Pay'\n            className={`gpay-button ${color} ${buttonType}`}\n          />\n        }\n      </div>\n    )\n  }\n}\n"],"names":["GOOGLE_PAY_BUTTON_SDK_URL","GPayButton","state","undefined","loadSDK","script","document","createElement","src","onload","setPaymentsClient","async","defer","body","appendChild","setState","window","google","payments","api","PaymentsClient","environment","props","development","payButtonClickListener","currencyCode","countryCode","totalPriceStatus","totalPrice","displayItems","totalPriceLabel","checkoutOption","merchantInfo","baseRequest","paymentMethodType","allowedAuthMethods","allowedCardNetworks","tokenizationSpecification","baseCardPaymentMethod","paymentDataRequest","paymentsClient","loadPaymentData","then","paymentData","paymentToken","paymentMethodData","tokenizationData","token","log","catch","error","paymentsClientInitialised","isReadyToPay","isReadyToPayRequest","response","result","createButton","onClick","className","style","color","buttonType","React","PureComponent","propTypes","PropTypes","object","string","oneOf","bool","isRequired","propName","componentName","Error","exec","arrayOf","shape","merchantId","merchantInfoProps","prop","number","oneOfType","array","defaultProps"],"mappings":"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"}