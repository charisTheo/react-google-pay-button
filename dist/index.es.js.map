{"version":3,"file":"index.es.js","sources":["../src/index.js"],"sourcesContent":["/* eslint-disable react/no-unused-prop-types */\n/* eslint-disable padded-blocks */\n/* eslint-disable no-multiple-empty-lines */\nimport React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nconst GOOGLE_PAY_BUTTON_SDK_URL = 'https://pay.google.com/gp/p/js/pay.js'\n\nexport default class GPayButton extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    color: PropTypes.oneOf(['black', 'white']),\n    buttonType: PropTypes.oneOf(['long', 'short']),\n    development: PropTypes.bool,\n    // * Google Pay API\n    currencyCode: PropTypes.string.isRequired,\n    countryCode: PropTypes.string,\n    totalPriceStatus: PropTypes.string.isRequired,\n    totalPrice: (props, propName, componentName) => {\n      if (props.totalPriceStatus !== 'NOT_CURRENTLY_KNOWN') {\n        if (props[propName] === undefined || props[propName] === '') {\n          return new Error(`${componentName}: the prop totalPrice is required unless the prop totalPriceStatus is set to NOT_CURRENTLY_KNOWN`)\n        } else if (!/^[0-9]+(\\.[0-9][0-9])?$/.exec(props[propName])) {\n          return new Error(`${componentName}: the prop totalPrice should be either in a number format or a string of numbers. Should match ^[0-9]+(\\\\.[0-9][0-9])?$`)\n        }\n      }\n    },\n    displayItems: PropTypes.arrayOf(PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      type: PropTypes.oneOf(['LINE_ITEM', 'SUBTOTAL']),\n      price: PropTypes.string.isRequired,\n      status: PropTypes.oneOf(['FINAL', 'PENDING'])\n    })),\n    totalPriceLabel: PropTypes.string,\n    checkoutOption: PropTypes.string,\n    merchantInfo: function (props, propName, componentName) {\n      if (props.development === false && (props[propName].merchantId === undefined || props[propName].merchantId === '')) {\n        return new Error(`${componentName}: merchantInfo -> merchantId is required in production environment!`)\n      } else {\n        const merchantInfoProps = props[propName]\n        // merchantName, merchantOrigin\n        for (let prop in merchantInfoProps) {\n          if (typeof merchantInfoProps[prop] !== 'string') {\n            return new Error(`${componentName}: merchantInfo -> ${prop} should be a string!`)\n          }\n        }\n      }\n    },\n    baseRequest: PropTypes.shape({\n      apiVersion: PropTypes.number,\n      apiVersionMinor: PropTypes.number\n    }),\n    tokenizationSpecification: PropTypes.shape({\n      type: PropTypes.oneOf(['PAYMENT_GATEWAY', 'DIRECT']).isRequired,\n      parameters: PropTypes.oneOfType([\n        PropTypes.shape({\n          gateway: PropTypes.string,\n          gatewayMerchantId: PropTypes.string\n        }),\n        PropTypes.shape({\n          protocolVersion: PropTypes.string,\n          publicKey: PropTypes.string\n        })\n      ]).isRequired\n    }).isRequired,\n    allowedCardNetworks: PropTypes.arrayOf(PropTypes.oneOf(['AMEX', 'DISCOVER', 'INTERAC', 'JCB', 'MASTERCARD', 'VISA'])),\n    allowedAuthMethods: PropTypes.arrayOf(PropTypes.oneOf(['PAN_ONLY', 'CRYPTOGRAM_3DS'])),\n    // ? Paypal support\n    purchase_context: PropTypes.shape({\n      purchase_units: PropTypes.array\n    }),\n    paymentMethodType: PropTypes.oneOf(['CARD', 'PAYPAL']).isRequired,\n    onLoadPaymentData: PropTypes.func,\n    onPaymentAuthorized: PropTypes.func,\n    onPaymentDataChanged: PropTypes.func,\n    onUserCanceled: PropTypes.func\n  }\n\n  static defaultProps = {\n    development: false,\n    color: 'black',\n    buttonType: 'long',\n    baseRequest: {\n      apiVersion: 2,\n      apiVersionMinor: 0\n    },\n    allowedCardNetworks: ['AMEX', 'DISCOVER', 'INTERAC', 'JCB', 'MASTERCARD', 'VISA'],\n    allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\n    paymentMethodType: 'CARD'\n  }\n\n  state = {\n    paymentsClientInitialised: false,\n    paymentsClient: undefined\n  }\n\n  componentDidMount() {\n    if (!this.state.paymentsClientInitialised) {\n      this.loadSDK()\n    }\n  }\n\n  loadSDK = () => {\n    const script = document.createElement('script')\n    script.src = GOOGLE_PAY_BUTTON_SDK_URL\n    script.onload = this.setPaymentsClient\n    script.async = true\n    script.defer = true\n    document.body.appendChild(script)\n  }\n\n  setPaymentsClient = () => {\n    const {\n      development,\n      onPaymentAuthorized,\n      onPaymentDataChanged\n    } = this.props\n\n    let options = {\n      environment: development ? 'TEST' : 'PRODUCTION'\n    }\n    if (typeof onPaymentAuthorized === 'function') {\n      options = {\n        ...options,\n        paymentDataCallbacks: {\n          onPaymentAuthorized\n        }\n      }\n    }\n    if (typeof onPaymentDataChanged === 'function') {\n      options = {\n        ...options,\n        paymentDataCallbacks: {\n          ...options.paymentDataCallbacks,\n          onPaymentDataChanged\n        }\n      }\n    }\n\n    this.setState({\n      paymentsClientInitialised: true,\n      paymentsClient: new window.google.payments.api.PaymentsClient(options)\n    })\n  }\n\n  payButtonClickListener = () => {\n    const {\n      currencyCode,\n      countryCode,\n      totalPriceStatus,\n      totalPrice,\n      displayItems,\n      totalPriceLabel,\n      checkoutOption,\n      merchantInfo,\n      baseRequest,\n      paymentMethodType,\n      allowedAuthMethods,\n      allowedCardNetworks,\n      tokenizationSpecification,\n      onLoadPaymentData,\n      onPaymentAuthorized,\n      onPaymentDataChanged,\n      onUserCanceled\n    } = this.props\n\n    const baseCardPaymentMethod = {\n      type: paymentMethodType,\n      parameters: {\n        allowedAuthMethods,\n        allowedCardNetworks\n      },\n      tokenizationSpecification\n    }\n\n    const paymentDataRequest = {\n      ...baseRequest,\n      allowedPaymentMethods: [baseCardPaymentMethod],\n      transactionInfo: {\n        currencyCode,\n        countryCode,\n        totalPriceStatus,\n        totalPrice,\n        displayItems,\n        totalPriceLabel,\n        checkoutOption\n      },\n      merchantInfo\n    }\n\n    const callbackIntents = []\n    if (typeof onPaymentAuthorized === 'function') {\n      callbackIntents.push('PAYMENT_AUTHORIZATION')\n    }\n    if (typeof onPaymentDataChanged === 'function') {\n      callbackIntents.push('SHIPPING_ADDRESS', 'SHIPPING_OPTION')\n    }\n    if (callbackIntents.length) {\n      paymentDataRequest.callbackIntents = [...callbackIntents]\n    }\n\n    this.state.paymentsClient.loadPaymentData(paymentDataRequest).then(function(paymentData) {\n      onLoadPaymentData(paymentData)\n\n    }).catch(function(error) {\n      console.error('GPayButton.paymentsClient.loadPaymentData -> error', error)\n      if (error.statusCode === 'CANCELED') {\n        onUserCanceled(paymentDataRequest)\n      }\n\n    })\n  }\n\n  componentDidUpdate() {\n    const {\n      isReadyToPay,\n      paymentsClientInitialised,\n      paymentsClient\n    } = this.state\n\n    if (isReadyToPay || !paymentsClientInitialised) {\n      return\n    }\n\n    const {\n      paymentMethodType,\n      allowedAuthMethods,\n      allowedCardNetworks,\n      tokenizationSpecification\n    } = this.props\n    const baseCardPaymentMethod = {\n      type: paymentMethodType,\n      parameters: {\n        allowedAuthMethods,\n        allowedCardNetworks\n      },\n      tokenizationSpecification\n    }\n\n    const isReadyToPayRequest = {\n      ...this.props.baseRequest,\n      allowedPaymentMethods: [baseCardPaymentMethod]\n    }\n\n    paymentsClient.isReadyToPay(isReadyToPayRequest)\n      .then(response => {\n        const isReadyToPay = response.result\n        if (isReadyToPay) {\n          // * this function is called only to initialise the button styling, the returned button element is NOT used\n          paymentsClient.createButton({onClick: this.payButtonClickListener})\n          this.setState({ isReadyToPay })\n        }\n\n      })\n      .catch(error => {\n        console.error('window.configureGPay -> error', error)\n\n      })\n  }\n\n  render() {\n    const {\n      className,\n      style,\n      color,\n      buttonType\n    } = this.props\n\n    return (\n      <div className={className} style={style}>\n        { this.state.isReadyToPay &&\n          <button\n            onClick={this.payButtonClickListener}\n            type='button'\n            aria-label='Google Pay'\n            className={`gpay-button ${color} ${buttonType}`}\n          />\n        }\n      </div>\n    )\n  }\n}\n"],"names":["GOOGLE_PAY_BUTTON_SDK_URL","GPayButton","state","undefined","loadSDK","script","document","createElement","src","onload","setPaymentsClient","async","defer","body","appendChild","props","development","onPaymentAuthorized","onPaymentDataChanged","options","paymentDataCallbacks","setState","window","google","payments","api","PaymentsClient","payButtonClickListener","currencyCode","countryCode","totalPriceStatus","totalPrice","displayItems","totalPriceLabel","checkoutOption","merchantInfo","baseRequest","paymentMethodType","allowedAuthMethods","allowedCardNetworks","tokenizationSpecification","onLoadPaymentData","onUserCanceled","baseCardPaymentMethod","paymentDataRequest","callbackIntents","push","length","paymentsClient","loadPaymentData","then","paymentData","catch","error","statusCode","paymentsClientInitialised","isReadyToPay","isReadyToPayRequest","response","result","createButton","onClick","className","style","color","buttonType","PureComponent","propTypes","PropTypes","object","string","oneOf","bool","isRequired","propName","componentName","Error","exec","arrayOf","shape","merchantId","merchantInfoProps","prop","number","oneOfType","array","func","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAKA,IAAMA,4BAA4B,uCAAlC;;IAEqBC;;;;;;;;;;;;;;6LAoFnBC,QAAQ;iCACqB,KADrB;sBAEUC;aASlBC,UAAU,YAAM;UACRC,SAASC,SAASC,aAAT,CAAuB,QAAvB,CAAf;aACOC,GAAP,GAAaR,yBAAb;aACOS,MAAP,GAAgB,MAAKC,iBAArB;aACOC,KAAP,GAAe,IAAf;aACOC,KAAP,GAAe,IAAf;eACSC,IAAT,CAAcC,WAAd,CAA0BT,MAA1B;aAGFK,oBAAoB,YAAM;wBAKpB,MAAKK,KALe;UAEtBC,WAFsB,eAEtBA,WAFsB;UAGtBC,mBAHsB,eAGtBA,mBAHsB;UAItBC,oBAJsB,eAItBA,oBAJsB;;;UAOpBC,UAAU;qBACCH,cAAc,MAAd,GAAuB;OADtC;UAGI,OAAOC,mBAAP,KAA+B,UAAnC,EAA+C;+BAExCE,OADL;gCAEwB;;;;;UAKtB,OAAOD,oBAAP,KAAgC,UAApC,EAAgD;+BAEzCC,OADL;6CAGOA,QAAQC,oBADb;;;;;;YAOCC,QAAL,CAAc;mCACe,IADf;wBAEI,IAAIC,OAAOC,MAAP,CAAcC,QAAd,CAAuBC,GAAvB,CAA2BC,cAA/B,CAA8CP,OAA9C;OAFlB;aAMFQ,yBAAyB,YAAM;yBAmBzB,MAAKZ,KAnBoB;UAE3Ba,YAF2B,gBAE3BA,YAF2B;UAG3BC,WAH2B,gBAG3BA,WAH2B;UAI3BC,gBAJ2B,gBAI3BA,gBAJ2B;UAK3BC,UAL2B,gBAK3BA,UAL2B;UAM3BC,YAN2B,gBAM3BA,YAN2B;UAO3BC,eAP2B,gBAO3BA,eAP2B;UAQ3BC,cAR2B,gBAQ3BA,cAR2B;UAS3BC,YAT2B,gBAS3BA,YAT2B;UAU3BC,WAV2B,gBAU3BA,WAV2B;UAW3BC,iBAX2B,gBAW3BA,iBAX2B;UAY3BC,kBAZ2B,gBAY3BA,kBAZ2B;UAa3BC,mBAb2B,gBAa3BA,mBAb2B;UAc3BC,yBAd2B,gBAc3BA,yBAd2B;UAe3BC,iBAf2B,gBAe3BA,iBAf2B;UAgB3BxB,mBAhB2B,gBAgB3BA,mBAhB2B;UAiB3BC,oBAjB2B,gBAiB3BA,oBAjB2B;UAkB3BwB,cAlB2B,gBAkB3BA,cAlB2B;;;UAqBvBC,wBAAwB;cACtBN,iBADsB;oBAEhB;gDAAA;;SAFgB;;OAA9B;;UASMO,kCACDR,WADC;+BAEmB,CAACO,qBAAD,CAFnB;yBAGa;oCAAA;kCAAA;4CAAA;gCAAA;oCAAA;0CAAA;;SAHb;;QAAN;;UAeME,kBAAkB,EAAxB;UACI,OAAO5B,mBAAP,KAA+B,UAAnC,EAA+C;wBAC7B6B,IAAhB,CAAqB,uBAArB;;UAEE,OAAO5B,oBAAP,KAAgC,UAApC,EAAgD;wBAC9B4B,IAAhB,CAAqB,kBAArB,EAAyC,iBAAzC;;UAEED,gBAAgBE,MAApB,EAA4B;2BACPF,eAAnB,aAAyCA,eAAzC;;;YAGG3C,KAAL,CAAW8C,cAAX,CAA0BC,eAA1B,CAA0CL,kBAA1C,EAA8DM,IAA9D,CAAmE,UAASC,WAAT,EAAsB;0BACrEA,WAAlB;OADF,EAGGC,KAHH,CAGS,UAASC,KAAT,EAAgB;gBACfA,KAAR,CAAc,oDAAd,EAAoEA,KAApE;YACIA,MAAMC,UAAN,KAAqB,UAAzB,EAAqC;yBACpBV,kBAAf;;OANJ;;;;;;wCAzGkB;UACd,CAAC,KAAK1C,KAAL,CAAWqD,yBAAhB,EAA2C;aACpCnD,OAAL;;;;;yCAmHiB;;;mBAKf,KAAKF,KALU;UAEjBsD,YAFiB,UAEjBA,YAFiB;UAGjBD,yBAHiB,UAGjBA,yBAHiB;UAIjBP,cAJiB,UAIjBA,cAJiB;;;UAOfQ,gBAAgB,CAACD,yBAArB,EAAgD;;;;mBAS5C,KAAKxC,KAhBU;UAYjBsB,iBAZiB,UAYjBA,iBAZiB;UAajBC,kBAbiB,UAajBA,kBAbiB;UAcjBC,mBAdiB,UAcjBA,mBAdiB;UAejBC,yBAfiB,UAejBA,yBAfiB;;UAiBbG,wBAAwB;cACtBN,iBADsB;oBAEhB;gDAAA;;SAFgB;;OAA9B;;UASMoB,mCACD,KAAK1C,KAAL,CAAWqB,WADV;+BAEmB,CAACO,qBAAD;QAFzB;;qBAKea,YAAf,CAA4BC,mBAA5B,EACGP,IADH,CACQ,oBAAY;YACVM,eAAeE,SAASC,MAA9B;YACIH,YAAJ,EAAkB;;yBAEDI,YAAf,CAA4B,EAACC,SAAS,OAAKlC,sBAAf,EAA5B;iBACKN,QAAL,CAAc,EAAEmC,0BAAF,EAAd;;OANN,EAUGJ,KAVH,CAUS,iBAAS;gBACNC,KAAR,CAAc,+BAAd,EAA+CA,KAA/C;OAXJ;;;;6BAgBO;oBAMH,KAAKtC,KANF;UAEL+C,SAFK,WAELA,SAFK;UAGLC,KAHK,WAGLA,KAHK;UAILC,KAJK,WAILA,KAJK;UAKLC,UALK,WAKLA,UALK;;;aASL;;UAAK,WAAWH,SAAhB,EAA2B,OAAOC,KAAlC;aACS7D,KAAL,CAAWsD,YAAX,IACA;mBACW,KAAK7B,sBADhB;gBAEO,QAFP;wBAGa,YAHb;sCAI4BqC,KAA1B,SAAmCC;;OAP3C;;;;EArQoCC;;AAAnBjE,WACZkE,YAAY;SACVC,UAAUC,MADA;aAEND,UAAUE,MAFJ;SAGVF,UAAUG,KAAV,CAAgB,CAAC,OAAD,EAAU,OAAV,CAAhB,CAHU;cAILH,UAAUG,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB,CAJK;eAKJH,UAAUI,IALN;;gBAOHJ,UAAUE,MAAV,CAAiBG,UAPd;eAQJL,UAAUE,MARN;oBASCF,UAAUE,MAAV,CAAiBG,UATlB;cAUL,oBAAC1D,KAAD,EAAQ2D,QAAR,EAAkBC,aAAlB,EAAoC;QAC1C5D,MAAMe,gBAAN,KAA2B,qBAA/B,EAAsD;UAChDf,MAAM2D,QAAN,MAAoBvE,SAApB,IAAiCY,MAAM2D,QAAN,MAAoB,EAAzD,EAA6D;eACpD,IAAIE,KAAJ,CAAaD,aAAb,sGAAP;OADF,MAEO,IAAI,CAAC,0BAA0BE,IAA1B,CAA+B9D,MAAM2D,QAAN,CAA/B,CAAL,EAAsD;eACpD,IAAIE,KAAJ,CAAaD,aAAb,6HAAP;;;GAfW;gBAmBHP,UAAUU,OAAV,CAAkBV,UAAUW,KAAV,CAAgB;WACvCX,UAAUE,MAAV,CAAiBG,UADsB;UAExCL,UAAUG,KAAV,CAAgB,CAAC,WAAD,EAAc,UAAd,CAAhB,CAFwC;WAGvCH,UAAUE,MAAV,CAAiBG,UAHsB;YAItCL,UAAUG,KAAV,CAAgB,CAAC,OAAD,EAAU,SAAV,CAAhB;GAJsB,CAAlB,CAnBG;mBAyBAH,UAAUE,MAzBV;kBA0BDF,UAAUE,MA1BT;gBA2BH,sBAAUvD,KAAV,EAAiB2D,QAAjB,EAA2BC,aAA3B,EAA0C;QAClD5D,MAAMC,WAAN,KAAsB,KAAtB,KAAgCD,MAAM2D,QAAN,EAAgBM,UAAhB,KAA+B7E,SAA/B,IAA4CY,MAAM2D,QAAN,EAAgBM,UAAhB,KAA+B,EAA3G,CAAJ,EAAoH;aAC3G,IAAIJ,KAAJ,CAAaD,aAAb,yEAAP;KADF,MAEO;UACCM,oBAAoBlE,MAAM2D,QAAN,CAA1B;;WAEK,IAAIQ,IAAT,IAAiBD,iBAAjB,EAAoC;YAC9B,OAAOA,kBAAkBC,IAAlB,CAAP,KAAmC,QAAvC,EAAiD;iBACxC,IAAIN,KAAJ,CAAaD,aAAb,0BAA+CO,IAA/C,0BAAP;;;;GAnCS;eAwCJd,UAAUW,KAAV,CAAgB;gBACfX,UAAUe,MADK;qBAEVf,UAAUe;GAFhB,CAxCI;6BA4CUf,UAAUW,KAAV,CAAgB;UACnCX,UAAUG,KAAV,CAAgB,CAAC,iBAAD,EAAoB,QAApB,CAAhB,EAA+CE,UADZ;gBAE7BL,UAAUgB,SAAV,CAAoB,CAC9BhB,UAAUW,KAAV,CAAgB;eACLX,UAAUE,MADL;yBAEKF,UAAUE;KAF/B,CAD8B,EAK9BF,UAAUW,KAAV,CAAgB;uBACGX,UAAUE,MADb;iBAEHF,UAAUE;KAFvB,CAL8B,CAApB,EASTG;GAXsB,EAYxBA,UAxDc;uBAyDIL,UAAUU,OAAV,CAAkBV,UAAUG,KAAV,CAAgB,CAAC,MAAD,EAAS,UAAT,EAAqB,SAArB,EAAgC,KAAhC,EAAuC,YAAvC,EAAqD,MAArD,CAAhB,CAAlB,CAzDJ;sBA0DGH,UAAUU,OAAV,CAAkBV,UAAUG,KAAV,CAAgB,CAAC,UAAD,EAAa,gBAAb,CAAhB,CAAlB,CA1DH;;oBA4DCH,UAAUW,KAAV,CAAgB;oBAChBX,UAAUiB;GADV,CA5DD;qBA+DEjB,UAAUG,KAAV,CAAgB,CAAC,MAAD,EAAS,QAAT,CAAhB,EAAoCE,UA/DtC;qBAgEEL,UAAUkB,IAhEZ;uBAiEIlB,UAAUkB,IAjEd;wBAkEKlB,UAAUkB,IAlEf;kBAmEDlB,UAAUkB;;AApETrF,WAuEZsF,eAAe;eACP,KADO;SAEb,OAFa;cAGR,MAHQ;eAIP;gBACC,CADD;qBAEM;GANC;uBAQC,CAAC,MAAD,EAAS,UAAT,EAAqB,SAArB,EAAgC,KAAhC,EAAuC,YAAvC,EAAqD,MAArD,CARD;sBASA,CAAC,UAAD,EAAa,gBAAb,CATA;qBAUD;;;;;"}