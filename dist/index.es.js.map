{"version":3,"file":"index.es.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/index.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","/* eslint-disable padded-blocks */\n/* eslint-disable no-multiple-empty-lines */\nimport React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './styles.css'\n\nconst GOOGLE_PAY_BUTTON_SDK_URL = 'https://pay.google.com/gp/p/js/pay.js'\nconst baseRequest = {\n  apiVersion: 2,\n  apiVersionMinor: 0\n}\nconst tokenizationSpecification = {\n  type: 'PAYMENT_GATEWAY',\n  parameters: {\n    'gateway': 'example',\n    'gatewayMerchantId': 'exampleGatewayMerchantId'\n  }\n}\nconst allowedCardNetworks = ['AMEX', 'DISCOVER', 'INTERAC', 'JCB', 'MASTERCARD', 'VISA']\nconst allowedAuthMethods = ['PAN_ONLY', 'CRYPTOGRAM_3DS']\nconst baseCardPaymentMethod = {\n  type: 'CARD',\n  parameters: {\n    allowedAuthMethods,\n    allowedCardNetworks\n  },\n  tokenizationSpecification\n}\n\nexport default class GPayButton extends PureComponent {\n  static propTypes = {\n\n  }\n\n  static defaultProps = {\n    text: 'Button'\n  }\n\n  state = {\n    paymentsClientInitialised: false,\n    paymentsClient: undefined\n  }\n\n  componentDidMount() {\n    console.log('GPayButton.componentDidMount: this.state.paymentsClientInitialised', this.state.paymentsClientInitialised)\n    if (!this.state.paymentsClientInitialised) {\n      this.loadSDK()\n    }\n  }\n\n  loadSDK = () => {\n    const script = document.createElement('script')\n    script.src = GOOGLE_PAY_BUTTON_SDK_URL\n    script.onload = this.setPaymentsClient\n    script.async = true\n    script.defer = true\n    document.body.appendChild(script)\n  }\n\n  setPaymentsClient = () => {\n    this.setState({\n      paymentsClientInitialised: true,\n      paymentsClient: new window.google.payments.api.PaymentsClient({environment: 'TEST'})\n    })\n  }\n\n  payButtonClickListener = () => {\n    const paymentDataRequest = {\n      ...baseRequest,\n      allowedPaymentMethods: [baseCardPaymentMethod],\n      transactionInfo: {\n        totalPriceStatus: 'FINAL',\n        totalPrice: '123.45',\n        currencyCode: 'USD',\n        countryCode: 'US'\n      },\n      merchantInfo: {\n        merchantName: 'Example Merchant'\n      }\n    }\n\n    this.state.paymentsClient.loadPaymentData(paymentDataRequest).then(function(paymentData) {\n      // if using gateway tokenization, pass this token without modification\n      const paymentToken = paymentData.paymentMethodData.tokenizationData.token\n      console.log('TCL: GPayButton -> payButtonClickListener -> paymentToken', paymentToken)\n\n    }).catch(function(err) {\n      console.error('payButtonClickListener -> err', err)\n    })\n  }\n\n  componentDidUpdate() {\n    if (this.state.isReadyToPay) return\n    console.log('TCL: GPayButton -> componentDidUpdate -> this.state.paymentsClientInitialised', this.state.paymentsClientInitialised)\n\n    const isReadyToPayRequest = {\n      ...baseRequest,\n      allowedPaymentMethods: [baseCardPaymentMethod]\n    }\n\n    this.state.paymentsClient.isReadyToPay(isReadyToPayRequest)\n      .then(response => {\n        const isReadyToPay = response.result\n        if (isReadyToPay) {\n          // * this function is called only to initialise the button styling, the returned button element is NOT used\n          this.state.paymentsClient.createButton({onClick: this.payButtonClickListener})\n          this.setState({ isReadyToPay })\n        }\n\n      })\n      .catch(error => {\n        console.error('window.configureGPay -> error', error)\n\n      })\n  }\n\n  render() {\n    // const {\n\n    // } = this.props\n\n    return (\n      <div>\n        { this.state.isReadyToPay &&\n          <button\n            onClick={this.payButtonClickListener}\n            type='button'\n            aria-label='Google Pay'\n            className='gpay-button black long'\n          />\n        }\n      </div>\n    )\n  }\n}\n"],"names":["GOOGLE_PAY_BUTTON_SDK_URL","baseRequest","tokenizationSpecification","allowedCardNetworks","allowedAuthMethods","baseCardPaymentMethod","GPayButton","state","undefined","loadSDK","script","document","createElement","src","onload","setPaymentsClient","async","defer","body","appendChild","setState","window","google","payments","api","PaymentsClient","environment","payButtonClickListener","paymentDataRequest","paymentsClient","loadPaymentData","then","paymentData","paymentToken","paymentMethodData","tokenizationData","token","log","catch","err","error","paymentsClientInitialised","isReadyToPay","isReadyToPayRequest","response","result","createButton","onClick","PureComponent","propTypes","defaultProps"],"mappings":"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"}